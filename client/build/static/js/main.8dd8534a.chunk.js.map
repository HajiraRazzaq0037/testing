{"version":3,"sources":["firebase.js","context/Reducers/delDataReducer.js","context/Actions/actionUserDetail.js","config.js","context/services/get.js","context/Actions/getDataAction.js","context/Actions/delDataAction.js","context/services/delete.js","context/initialState.js","context/GlobalState.js","pages/logInPage/logInPage.js","pages/signUpPage/signUppage.js","atoms/header.js","pages/homePage/homePage.js","atoms/loader.js","pages/viewDetails/detail.js","authentication/privateRoute.js","authentication/routes.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Reducer","state","action","type","data","payload","error","errors","loggedIn","loader","actionsetUserDetail","dispatch","localStorage","getItem","getApiUrI","getService","a","fetch","then","response","json","catch","err","finally","getDataAction","delDataAction","id","method","delService","initialState","userDetail","GlobalContext","createContext","GlobalProvider","children","useReducer","Provider","value","history","useState","User","any","user","setUser","setError","useContext","className","onSubmit","e","preventDefault","email","password","auth","signInWithEmailAndPassword","onAuthStateChanged","push","message","loginHandler","htmlFor","name","placeholder","onChange","dub","target","to","SignUpPage","createUserWithEmailAndPassword","uid","userObj","fullName","firestore","collection","doc","set","props","setData","useEffect","axios","get","onClick","signOut","map","sin","index","key","title","color","height","width","Details","body","find","parseInt","match","params","console","log","path","component","Loader","exact","homePage","ViewDetails","withRouter","LogInPage","PrivateRoutes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dd8534a.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport default firebase.initializeApp({\r\n  apiKey: \"AIzaSyAxFhRIJlKuILRIPgYtD5wTWfZJpAmjj0g\",\r\n  authDomain: \"login-with-firebase-1cf4d.firebaseapp.com\",\r\n  projectId: \"login-with-firebase-1cf4d\",\r\n  storageBucket: \"login-with-firebase-1cf4d.appspot.com\",\r\n  messagingSenderId: \"755284248489\",\r\n  appId: \"1:755284248489:web:0b565b493f8c0f868066b8\",\r\n  measurementId: \"G-X8DWLYTLBK\"\r\n\r\n  // databaseURL: \"https://chat-app-with-firestore-aac6c.firebaseio.com\",\r\n \r\n\r\n});","export const Reducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case 'GET_DATA':\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case 'SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.errors\r\n            };\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedIn: action.payload\r\n            };\r\n        case 'SET_LOADER':\r\n            return {\r\n                ...state,\r\n                loader: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const actionsetUserDetail = (dispatch:any) => {\r\n    let loggedIn=localStorage.getItem('logged')\r\n    if(loggedIn){\r\n        dispatch({\r\n            type: 'SET_USER',\r\n            payload: loggedIn\r\n        });\r\n    }\r\n};","export const getApiUrI = 'https://jsonplaceholder.typicode.com/posts';\r\n","import { getApiUrI } from '../../config';\r\nexport const getService =async function (dispatch:any) {\r\n    return await fetch(getApiUrI)\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            dispatch({\r\n                type: 'GET_DATA',\r\n                payload: data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: 'SET_ERROR',\r\n                errors: err,\r\n            })\r\n        })\r\n        .finally(() => {\r\n            dispatch({\r\n                type: 'SET_LOADER',\r\n                loader: false,\r\n            })\r\n        })\r\n\r\n};","//  import { getApiUrI } from '../../config';\r\nimport {getService} from '../services/get'\r\nexport const getDataAction = (dispatch:any) => {\r\n    getService(dispatch);\r\n};","import {delService} from '../services/delete'\r\nexport const delDataAction = (id:any,data:any,dispatch:any) => {\r\n    delService(id,data,dispatch)\r\n};","import { getApiUrI } from '../../config';\r\nexport const delService = function (id:any,data:any,dispatch:any) {\r\n    return fetch(`${getApiUrI}/${id}`,{\r\n        method:'DELETE'\r\n    }).then(() =>\r\n        dispatch({\r\n            type: 'GET_DATA',\r\n            payload: data\r\n        })\r\n    )\r\n};","export const initialState = {\r\n    userDetail: \"\",\r\n    loader: true ,\r\n    data: [],\r\n    error:{}\r\n};","import React, {createContext, useReducer} from 'react';\r\n// import {setUserReducer} from './Reducers/setUserReducer';\r\n// import {getDataReducer} from './Reducers/getDataReducer';\r\nimport {Reducer} from './Reducers/delDataReducer';\r\n import {actionsetUserDetail} from './Actions/actionUserDetail';\r\nimport {getDataAction} from './Actions/getDataAction';\r\nimport {delDataAction} from './Actions/delDataAction';\r\nimport {initialState} from './initialState';\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        state: state,\r\n        actionsetUserDetail,\r\n        delDataAction,\r\n        getDataAction,\r\n        dispatch,\r\n        initialState,\r\n        }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, {useState, useContext} from 'react'\r\nimport firebase from '../../firebase'\r\nimport {Link} from 'react-router-dom';\r\nimport {GlobalContext} from '../../context/GlobalState'\r\ntype User = {\r\n    email: string | '';\r\n    password: string | '';\r\n}\r\nexport default ({history}: any) => {\r\n    const [user, setUser] = useState<User | any>(null);\r\n    const [error, setError] = useState('');\r\n    const {state}:any = useContext(GlobalContext);\r\n    const loginHandler = (e: any) => {\r\n        e.preventDefault();\r\n        if (user === null) {\r\n            setError(\"email and password are required fields\");\r\n        }\r\n        else {\r\n            if (user && (!user.email || !user.password)) {\r\n                if (!user.email) {\r\n                    setError(\"email is required fields\");\r\n                }\r\n                if (!user.password) {\r\n                    setError(\"password is required fields\");\r\n                }\r\n            }\r\n            else {\r\n                firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n                    .then(() => {\r\n                        firebase.auth().onAuthStateChanged(() => {\r\n                            state.loader = false;\r\n                            history.push('/')\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                        setError(err.message);\r\n                    })\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"bg-gray-200\">\r\n            <div className=\"py-20\">\r\n                <div className=\"mt-8\">\r\n                    <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\r\n                    <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                        <form onSubmit={(e) => {\r\n                            loginHandler(e)\r\n                        }}>\r\n                            <label htmlFor=\"userEmail\" className=\"block\">Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"my-1 p-1 w-full outline-none border\"\r\n                                name=\"userEmail\"\r\n                                placeholder=\"E.g: hajira@gmail.com\"\r\n                                value={user && user.email ? user.email : \"\"}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setError(\"\");\r\n                                        let dub = {...user}\r\n                                        dub.email = e.target.value;\r\n                                        setUser(dub);\r\n                                    }\r\n                                }\r\n                            />\r\n\r\n                            <label htmlFor=\"userPassword\" className=\"block\">\r\n                                Password:\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"mt-1 mb-3 p-1 w-full outline-none border\"\r\n                                name=\"userPassword\"\r\n                                value={user && user.password ? user.password : \"\"}\r\n                                placeholder=\"Your Password\"\r\n                                id=\"userPassword\"\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setError(\"\");\r\n                                        let dub = {...user}\r\n                                        dub.password = e.target.value;\r\n                                        setUser(dub);\r\n                                    }\r\n                                }\r\n\r\n                            />\r\n                            <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\r\n                                {error ? error : \" \"}\r\n                            </p>\r\n                            <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                        </form>\r\n\r\n                        <p className=\"text-center my-3\">Don't have an account {\" \"}\r\n                            <Link to=\"/sign-up\" className=\"text-blue-500 hover:text-blue-600\">\r\n                                Sign up here\r\n                            </Link>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState ,useContext} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport {GlobalContext} from '../../context/GlobalState'\r\ntype User = {\r\n  email: string | '';\r\n  password: string | '';\r\n  name: string | '';\r\n}\r\n\r\nconst SignUpPage = ({history}:any) => {\r\n    const {state}:any = useContext(GlobalContext);\r\n  const [user, setUser] = useState<User | any>(null);\r\n  const [error, setError] = useState('');\r\n  const signupHandler = (event: any) => {\r\n    event.preventDefault();\r\n    if (user === null) {\r\n      setError(\"name,email and password  are required fields\");\r\n    }\r\n    else {\r\n      if (user && (!user.name || !user.email || !user.password)) {\r\n        if (!user.name) {\r\n          setError(\"name is required fields\");\r\n        }\r\n        if (!user.email) {\r\n          setError(\"email is required fields\");\r\n        }\r\n        if (!user.password) {\r\n          setError(\"password is required fields\");\r\n        }\r\n      }\r\n      else {\r\n        setError(\"\");\r\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n          .then((data:any) => {\r\n            let uid = data && data.user && data.user.uid;\r\n            let userObj = {\r\n              fullName: user.name,\r\n              email: user.email,\r\n              uid\r\n            };\r\n            firebase.firestore().collection('users')\r\n              .doc(uid ? uid : \"\")\r\n              .set(userObj);\r\n              state.loader = false;\r\n               history.push('/')\r\n             }).catch(function (error) {\r\n            setError(error.message)\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n\r\n        <form className=\" \" onSubmit={(e) => {\r\n          signupHandler(e)\r\n        }}>\r\n          <label htmlFor=\"displayName\" className=\"block\">\r\n            Display Name:\r\n          </label>\r\n          <input type=\"text\" className=\"my-1 p-1 w-full outline-none border \" name=\"displayName\" placeholder=\"E.g: Username\" value={user?.name}\r\n            onChange={\r\n              (e) => {\r\n                setError(\"\")\r\n                let dub = { ...user }\r\n                dub.name = e.target.value\r\n                setUser(dub);\r\n              }\r\n            }\r\n          />\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            Email:\r\n          </label>\r\n          <input type=\"email\" className=\"my-1 p-1 w-full border outline-none\" name=\"userEmail\" placeholder=\"E.g: test@gmail.com\"\r\n            id=\"userEmail\"\r\n            value={user?.email}\r\n            onChange={(e) => {\r\n              setError(\"\")\r\n              let dub = { ...user }\r\n              dub.email = e.target.value\r\n              setUser(dub);\r\n            }} />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full outline-none border\"\r\n            name=\"userPassword\"\r\n\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            value={user?.password}\r\n            onChange={\r\n              (e) => {\r\n                setError(\"\")\r\n                let dub = { ...user }\r\n                dub.password = e.target.value\r\n                setUser(dub);\r\n              }} />\r\n          <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\r\n            {error ? error : \" \"}\r\n          </p>\r\n          <button\r\n            className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white \" type=\"submit\" >\r\n            Sign up\r\n          </button>\r\n        </form> \r\n        <p className=\"text-center my-3\">\r\n         I have  account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;","import React from 'react'\r\nexport default (props: any) => {\r\n  return (\r\n    <header className='flex justify-between bg-green-300 py-6 '>\r\n      <div>\r\n        <h1 className=''> </h1>\r\n      </div>\r\n      <div>\r\n        <h1 className='text-white font-bold text-xlg'> User Details</h1>\r\n      </div>\r\n      <div className='mx-12'>{props?.children}</div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\nimport firebase from '../../firebase'\r\nimport axios from 'axios'\r\nimport Header from '../../atoms/header'\r\nexport default (props: any) => {\r\n  let { history } = props\r\n  const { state }: any = useContext(GlobalContext)\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    axios.get('/api').then(response => {\r\n      setData(response.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=''>\r\n      <Header>\r\n        <button\r\n          className='p-8 bg-green-500 hover:bg-gren-300 w-full py-2 text-white'\r\n          onClick={() => {\r\n            firebase\r\n              .auth()\r\n              .signOut()\r\n              .then(() => {\r\n                state.loader = true\r\n                history.push('/login')\r\n              })\r\n          }}\r\n        >\r\n          Logout\r\n        </button>\r\n      </Header>\r\n\r\n      <div className='py-5'>\r\n        <div className='mt-8'>\r\n          {data.map((sin: any, index: number) => (\r\n            <div key={index} className='flex justify-between m-4'>\r\n              <p key={index} className='text-base mb-2 flex  font-bold w-1/4'>\r\n                {sin.id} {sin.title}\r\n              </p>\r\n              <button\r\n                className=' bg-green-400 hover:bg-green-500 w-1/3 py-2 text-white w-1/4'\r\n                onClick={() => {\r\n                  props.history.push(`/${sin.id}`)\r\n                }}\r\n              >\r\n                View Details\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nexport default () => {\r\n  return (\r\n    <div className='flex justify-center items-center h-screen'>\r\n      <Loader type='Puff' color='#00BFFF' height={100} width={100} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Header from '../../atoms/header'\r\nconst Details = (props: any) => {\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    title: '',\r\n    body: ''\r\n  })\r\n  useEffect(() => {\r\n    axios.get('/api/').then((response: any) => {\r\n      setData(\r\n        response.data.find(\r\n          (sin: any) => sin.id === parseInt(props.match.params.id)\r\n        )\r\n      )\r\n    })\r\n  }, [props.match.params.id])\r\n  return (\r\n    <div className=''>\r\n      <Header>\r\n        <div></div>\r\n      </Header>\r\n\r\n      <div className='py-5'>user Detail</div>\r\n      <p>userId: {data.id}</p>\r\n      <p>title: {data.title}</p>\r\n      <p>body: {data.body}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport homePage from \"../pages/homePage/homePage\";\r\n\r\nimport Loader from \"../atoms/loader\";\r\nimport firebase from \"../firebase\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport ViewDetails from \"../pages/viewDetails/detail\";\r\nexport default (props: any) => {\r\n  let { history } = props;\r\n  const { state }: any = useContext(GlobalContext);\r\n  console.log(\"state\", state);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user: any) => {\r\n      if (user && user.uid !== null) {\r\n        state.loader = false;\r\n        state.userDetail = user && user.uid;\r\n        history.push(\"/\");\r\n      } else {\r\n        state.loader = false;\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, [state, history]);\r\n  return (\r\n    <div>\r\n      {!state.loader ? (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={homePage} />\r\n          {state.userDetail && (\r\n            <Route path=\"/:id\" exact component={ViewDetails} />\r\n          )}\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/\" component={Loader} />\r\n        </Switch>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport LogInPage from \"../pages/logInPage/logInPage\";\r\nimport SignUpPage from \"../pages/signUpPage/signUppage\";\r\nimport PrivateRoutes from \"./privateRoute\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" exact component={LogInPage} />\r\n      <Route path=\"/sign-up\" exact component={SignUpPage} />\r\n      <Route path=\"/\" component={PrivateRoutes} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default withRouter(Routes);\r\n","import React from 'react';\r\nimport './tailwind.output.css';\r\nimport './tailwind.css';\r\nimport Routes from './authentication/routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n    return (\r\n        <GlobalProvider>\r\n            <BrowserRouter>\r\n                <Routes />\r\n            </BrowserRouter>\r\n        </GlobalProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}