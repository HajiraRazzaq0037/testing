{"version":3,"sources":["firebase.tsx","context/Reducers/delDataReducer.tsx","context/Actions/actionUserDetail.tsx","config.tsx","context/services/get.tsx","context/Actions/getDataAction.tsx","context/Actions/delDataAction.tsx","context/services/delete.tsx","context/initialState.tsx","context/GlobalState.js","pages/logInPage/logInPage.tsx","pages/signUpPage/signUppage.tsx","pages/homePage/homePage.tsx","atoms/loader.tsx","pages/viewDetails/detail.tsx","authentication/privateRoute.tsx","authentication/routes.tsx","App.tsx","index.tsx"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Reducer","state","action","type","data","payload","error","errors","loggedIn","loader","actionsetUserDetail","dispatch","localStorage","getItem","getApiUrI","getService","a","fetch","then","response","json","catch","err","finally","getDataAction","delDataAction","id","method","delService","initialState","userDetail","GlobalContext","createContext","GlobalProvider","children","useReducer","Provider","value","history","useState","user","setUser","setError","useContext","className","onSubmit","e","preventDefault","email","password","auth","signInWithEmailAndPassword","onAuthStateChanged","push","message","loginHandler","htmlFor","name","placeholder","onChange","dub","target","to","SignUpPage","createUserWithEmailAndPassword","uid","userObj","fullName","firestore","collection","doc","set","props","setData","useEffect","axios","get","onClick","signOut","map","sin","index","key","title","color","height","width","Details","body","find","parseInt","match","params","console","log","path","component","Loader","exact","homePage","ViewDetails","withRouter","LogInPage","PrivateRoutes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8df2bad1.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nexport default firebase.initializeApp({\n  apiKey: \"AIzaSyAxFhRIJlKuILRIPgYtD5wTWfZJpAmjj0g\",\n  authDomain: \"login-with-firebase-1cf4d.firebaseapp.com\",\n  projectId: \"login-with-firebase-1cf4d\",\n  storageBucket: \"login-with-firebase-1cf4d.appspot.com\",\n  messagingSenderId: \"755284248489\",\n  appId: \"1:755284248489:web:0b565b493f8c0f868066b8\",\n  measurementId: \"G-X8DWLYTLBK\"\n\n  // databaseURL: \"https://chat-app-with-firestore-aac6c.firebaseio.com\",\n \n\n});","export const Reducer = (state: any, action: any) => {\n    switch (action.type) {\n        case 'GET_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        case 'SET_ERROR':\n            return {\n                ...state,\n                error: action.errors\n            };\n        case 'SET_USER':\n            return {\n                ...state,\n                loggedIn: action.payload\n            };\n        case 'SET_LOADER':\n            return {\n                ...state,\n                loader: action.payload\n            };\n        default:\n            return state;\n    }\n}","export const actionsetUserDetail = (dispatch:any) => {\n    let loggedIn=localStorage.getItem('logged')\n    if(loggedIn){\n        dispatch({\n            type: 'SET_USER',\n            payload: loggedIn\n        });\n    }\n};","export const getApiUrI = 'https://jsonplaceholder.typicode.com/posts';\n","import { getApiUrI } from '../../config';\nexport const getService =async function (dispatch:any) {\n    return await fetch(getApiUrI)\n        .then(response => response.json())\n        .then(data =>{\n            dispatch({\n                type: 'GET_DATA',\n                payload: data,\n            })\n        })\n        .catch((err) => {\n            dispatch({\n                type: 'SET_ERROR',\n                errors: err,\n            })\n        })\n        .finally(() => {\n            dispatch({\n                type: 'SET_LOADER',\n                loader: false,\n            })\n        })\n\n};","//  import { getApiUrI } from '../../config';\nimport {getService} from '../services/get'\nexport const getDataAction = (dispatch:any) => {\n    getService(dispatch);\n};","import {delService} from '../services/delete'\nexport const delDataAction = (id:any,data:any,dispatch:any) => {\n    delService(id,data,dispatch)\n};","import { getApiUrI } from '../../config';\nexport const delService = function (id:any,data:any,dispatch:any) {\n    return fetch(`${getApiUrI}/${id}`,{\n        method:'DELETE'\n    }).then(() =>\n        dispatch({\n            type: 'GET_DATA',\n            payload: data\n        })\n    )\n};","export const initialState = {\n    userDetail: \"\",\n    loader: true ,\n    data: [],\n    error:{}\n};","import React, {createContext, useReducer} from 'react';\n// import {setUserReducer} from './Reducers/setUserReducer';\n// import {getDataReducer} from './Reducers/getDataReducer';\nimport {Reducer} from './Reducers/delDataReducer';\n import {actionsetUserDetail} from './Actions/actionUserDetail';\nimport {getDataAction} from './Actions/getDataAction';\nimport {delDataAction} from './Actions/delDataAction';\nimport {initialState} from './initialState';\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n\n    return (<GlobalContext.Provider value={{\n        state: state,\n        actionsetUserDetail,\n        delDataAction,\n        getDataAction,\n        dispatch,\n        initialState,\n        }}>\n        {children}\n    </GlobalContext.Provider>);\n}","import React, {useState, useContext} from 'react'\nimport firebase from '../../firebase'\nimport {Link} from 'react-router-dom';\nimport {GlobalContext} from '../../context/GlobalState'\ntype User = {\n    email: string | '';\n    password: string | '';\n}\nexport default ({history}: any) => {\n    const [user, setUser] = useState<User | any>(null);\n    const [error, setError] = useState('');\n    const {state}:any = useContext(GlobalContext);\n    const loginHandler = (e: any) => {\n        e.preventDefault();\n        if (user === null) {\n            setError(\"email and password are required fields\");\n        }\n        else {\n            if (user && (!user.email || !user.password)) {\n                if (!user.email) {\n                    setError(\"email is required fields\");\n                }\n                if (!user.password) {\n                    setError(\"password is required fields\");\n                }\n            }\n            else {\n                firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n                    .then(() => {\n                        firebase.auth().onAuthStateChanged(() => {\n                            state.loader = false;\n                            history.push('/')\n                        });\n                    })\n                    .catch((err) => {\n                        setError(err.message);\n                    })\n            }\n\n        }\n    }\n    return (\n        <div className=\"bg-gray-200\">\n            <div className=\"py-20\">\n                <div className=\"mt-8\">\n                    <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\n                    <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n                        <form onSubmit={(e) => {\n                            loginHandler(e)\n                        }}>\n                            <label htmlFor=\"userEmail\" className=\"block\">Email:</label>\n                            <input\n                                type=\"email\"\n                                className=\"my-1 p-1 w-full outline-none border\"\n                                name=\"userEmail\"\n                                placeholder=\"E.g: hajira@gmail.com\"\n                                value={user && user.email ? user.email : \"\"}\n                                onChange={\n                                    (e) => {\n                                        setError(\"\");\n                                        let dub = {...user}\n                                        dub.email = e.target.value;\n                                        setUser(dub);\n                                    }\n                                }\n                            />\n\n                            <label htmlFor=\"userPassword\" className=\"block\">\n                                Password:\n                            </label>\n                            <input\n                                type=\"password\"\n                                className=\"mt-1 mb-3 p-1 w-full outline-none border\"\n                                name=\"userPassword\"\n                                value={user && user.password ? user.password : \"\"}\n                                placeholder=\"Your Password\"\n                                id=\"userPassword\"\n                                onChange={\n                                    (e) => {\n                                        setError(\"\");\n                                        let dub = {...user}\n                                        dub.password = e.target.value;\n                                        setUser(dub);\n                                    }\n                                }\n\n                            />\n                            <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\n                                {error ? error : \" \"}\n                            </p>\n                            <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" type=\"submit\">\n                                Sign in\n                            </button>\n                        </form>\n\n                        <p className=\"text-center my-3\">Don't have an account {\" \"}\n                            <Link to=\"/sign-up\" className=\"text-blue-500 hover:text-blue-600\">\n                                Sign up here\n                            </Link>\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState ,useContext} from 'react'\nimport {Link} from 'react-router-dom';\nimport firebase from '../../firebase';\nimport {GlobalContext} from '../../context/GlobalState'\ntype User = {\n  email: string | '';\n  password: string | '';\n  name: string | '';\n}\n\nconst SignUpPage = ({history}:any) => {\n    const {state}:any = useContext(GlobalContext);\n  const [user, setUser] = useState<User | any>(null);\n  const [error, setError] = useState('');\n  const signupHandler = (event: any) => {\n    event.preventDefault();\n    if (user === null) {\n      setError(\"name,email and password  are required fields\");\n    }\n    else {\n      if (user && (!user.name || !user.email || !user.password)) {\n        if (!user.name) {\n          setError(\"name is required fields\");\n        }\n        if (!user.email) {\n          setError(\"email is required fields\");\n        }\n        if (!user.password) {\n          setError(\"password is required fields\");\n        }\n      }\n      else {\n        setError(\"\");\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n          .then((data:any) => {\n            let uid = data && data.user && data.user.uid;\n            let userObj = {\n              fullName: user.name,\n              email: user.email,\n              uid\n            };\n            firebase.firestore().collection('users')\n              .doc(uid ? uid : \"\")\n              .set(userObj);\n              state.loader = false;\n               history.push('/')\n             }).catch(function (error) {\n            setError(error.message)\n          });\n      }\n    }\n  }\n\n  return (\n    <div className=\"mt-8\">\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n\n        <form className=\" \" onSubmit={(e) => {\n          signupHandler(e)\n        }}>\n          <label htmlFor=\"displayName\" className=\"block\">\n            Display Name:\n          </label>\n          <input type=\"text\" className=\"my-1 p-1 w-full outline-none border \" name=\"displayName\" placeholder=\"E.g: Username\" value={user?.name}\n            onChange={\n              (e) => {\n                setError(\"\")\n                let dub = { ...user }\n                dub.name = e.target.value\n                setUser(dub);\n              }\n            }\n          />\n          <label htmlFor=\"userEmail\" className=\"block\">\n            Email:\n          </label>\n          <input type=\"email\" className=\"my-1 p-1 w-full border outline-none\" name=\"userEmail\" placeholder=\"E.g: test@gmail.com\"\n            id=\"userEmail\"\n            value={user?.email}\n            onChange={(e) => {\n              setError(\"\")\n              let dub = { ...user }\n              dub.email = e.target.value\n              setUser(dub);\n            }} />\n          <label htmlFor=\"userPassword\" className=\"block\">\n            Password:\n          </label>\n          <input\n            type=\"password\"\n            className=\"mt-1 mb-3 p-1 w-full outline-none border\"\n            name=\"userPassword\"\n\n            placeholder=\"Your Password\"\n            id=\"userPassword\"\n            value={user?.password}\n            onChange={\n              (e) => {\n                setError(\"\")\n                let dub = { ...user }\n                dub.password = e.target.value\n                setUser(dub);\n              }} />\n          <p className=\"p-2 text-color-orange cursor-pointer font-sans text-base font-semibold not-italic text-center\">\n            {error ? error : \" \"}\n          </p>\n          <button\n            className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white \" type=\"submit\" >\n            Sign up\n          </button>\n        </form> \n        <p className=\"text-center my-3\">\n         I have  account?{\" \"}\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\n            Login\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUpPage;","import React, { useEffect, useContext, useState } from 'react'\nimport { GlobalContext } from '../../context/GlobalState'\nimport firebase from '../../firebase'\nimport axios from 'axios'\nexport default (props: any) => {\n  let { history } = props\n  const { state, getDataAction, dispatch }: any = useContext(GlobalContext)\n  const [data, setData] = useState([])\n  useEffect(() => {\n    axios.get('/api').then(response => {\n      setData(response.data)\n    })\n  }, [])\n\n  return (\n    <div className=''>\n      <div className='py-5'>\n        <div className='mt-8'>\n          <button\n            className='my-4 bg-green-400 hover:bg-green-500 w-full py-2 text-white'\n            onClick={() => {\n              firebase\n                .auth()\n                .signOut()\n                .then(() => {\n                  state.loader = true\n                  history.push('/login')\n                })\n            }}\n          >\n            Logout\n          </button>\n          <button\n            className='my-4 bg-green-400 hover:bg-green-500 w-full py-2 text-white'\n            onClick={() => getDataAction(dispatch)}\n          >\n            getData\n          </button>\n          {data.map((sin: any, index: number) => (\n            <div key={index} className='flex justify-between m-4'>\n              <p key={index} className='text-base mb-2 flex  font-bold w-1/4'>\n                {sin.id} {sin.title}\n              </p>\n              <button\n                className=' bg-green-400 hover:bg-green-500 w-1/3 py-2 text-white w-1/4'\n                onClick={() => {\n                  props.history.push(`/${sin.id}`)\n                }}\n              >\n                View Details\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nexport default () => {\n  return (\n    <div className='flex justify-center items-center h-screen'>\n      <Loader type='Puff' color='#00BFFF' height={100} width={100} />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { getApiUrI } from '../../config'\nimport axios from 'axios'\nconst Details = (props: any) => {\n  const [data, setData] = useState({\n    id: '',\n    title: '',\n    body: ''\n  })\n  useEffect(() => {\n    axios.get(getApiUrI).then((response: any) => {\n      setData(\n        response.data.find(\n          (sin: any) => sin.id === parseInt(props.match.params.id)\n        )\n      )\n    })\n  }, [props.match.params.id])\n  return (\n    <div className=''>\n      <div className='py-5'>user Detail</div>\n      <p>userId: {data.id}</p>\n      <p>title: {data.title}</p>\n      <p>body: {data.body}</p>\n    </div>\n  )\n}\n\nexport default Details\n","import React, { useEffect, useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport homePage from \"../pages/homePage/homePage\";\n\nimport Loader from \"../atoms/loader\";\nimport firebase from \"../firebase\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport ViewDetails from \"../pages/viewDetails/detail\";\nexport default (props: any) => {\n  let { history } = props;\n  const { state }: any = useContext(GlobalContext);\n  console.log(\"state\", state);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user && user.uid !== null) {\n        state.loader = false;\n        state.userDetail = user && user.uid;\n        history.push(\"/\");\n      } else {\n        state.loader = false;\n        history.push(\"/login\");\n      }\n    });\n  }, [state, history]);\n  return (\n    <div>\n      {!state.loader ? (\n        <Switch>\n          <Route path=\"/\" exact component={homePage} />\n          {state.userDetail && (\n            <Route path=\"/:id\" exact component={ViewDetails} />\n          )}\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/\" component={Loader} />\n        </Switch>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport LogInPage from \"../pages/logInPage/logInPage\";\nimport SignUpPage from \"../pages/signUpPage/signUppage\";\nimport PrivateRoutes from \"./privateRoute\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/login\" exact component={LogInPage} />\n      <Route path=\"/sign-up\" exact component={SignUpPage} />\n      <Route path=\"/\" component={PrivateRoutes} />\n    </Switch>\n  );\n};\n\nexport default withRouter(Routes);\n","import React from 'react';\nimport './tailwind.output.css';\nimport './tailwind.css';\nimport Routes from './authentication/routes'\nimport { BrowserRouter } from 'react-router-dom'\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n    return (\n        <GlobalProvider>\n            <BrowserRouter>\n                <Routes />\n            </BrowserRouter>\n        </GlobalProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}