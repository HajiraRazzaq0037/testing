{"ast":null,"code":"var _jsxFileName = \"/home/hajira/Documents/loginwithfirebase/reactboiler/src/authentication/privateRoute.tsx\";\nimport React, { useEffect, useContext } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport homePage from '../pages/homePage/homePage';\nimport Loader from '../atoms/loader';\nimport firebase from '../firebase';\nimport { GlobalContext } from '../context/GlobalState';\nexport default (props => {\n  let {\n    history\n  } = props;\n  const {\n    state\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user && user.uid !== null) {\n        state.loader = false;\n        state.userDetail = user && user.uid;\n        history.push('/');\n      } else {\n        state.loader = false;\n        history.push('/login');\n      }\n    });\n  }, [state, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, !state.loader ? /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: homePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })));\n});","map":{"version":3,"sources":["/home/hajira/Documents/loginwithfirebase/reactboiler/src/authentication/privateRoute.tsx"],"names":["React","useEffect","useContext","Route","Switch","homePage","Loader","firebase","GlobalContext","props","history","state","auth","onAuthStateChanged","user","uid","loader","userDetail","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,gBAAgBC,KAAD,IAAgB;AAC7B,MAAI;AAAEC,IAAAA;AAAF,MAAcD,KAAlB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAiBT,UAAU,CAACM,aAAD,CAAjC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAe;AAChD,UAAIA,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAa,IAAzB,EAA+B;AAC7BJ,QAAAA,KAAK,CAACK,MAAN,GAAe,KAAf;AACAL,QAAAA,KAAK,CAACM,UAAN,GAAmBH,IAAI,IAAIA,IAAI,CAACC,GAAhC;AACAL,QAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACD,OAJD,MAIO;AACLP,QAAAA,KAAK,CAACK,MAAN,GAAe,KAAf;AACAN,QAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACD;AACF,KATD;AAUD,GAXQ,EAWN,CAACP,KAAD,EAAQD,OAAR,CAXM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,KAAK,CAACK,MAAP,gBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CADF;AAaD,CA5BD","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport homePage from '../pages/homePage/homePage'\nimport Loader from '../atoms/loader'\nimport firebase from '../firebase'\nimport { GlobalContext } from '../context/GlobalState'\nexport default (props: any) => {\n  let { history } = props\n  const { state }: any = useContext(GlobalContext)\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user: any) => {\n      if (user && user.uid !== null) {\n        state.loader = false\n        state.userDetail = user && user.uid\n        history.push('/')\n      } else {\n        state.loader = false\n        history.push('/login')\n      }\n    })\n  }, [state, history])\n  return (\n    <div>\n      {!state.loader ? (\n        <Switch>\n          <Route path='/' exact component={homePage} />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path='/' exact component={Loader} />\n        </Switch>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}